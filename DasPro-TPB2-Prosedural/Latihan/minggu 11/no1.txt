KAMUS
    constant NMax : integer = 100
    type TabInt : array [0..NMax-1] of integer
    { Variabel }
    T : TabInt
    N : integer { banyaknya elemen efektif }

    procedure FindMin (input T : TabInt, input N : integer, output MIN : integer, output IMin : integer )

    { Pencarian harga minimum tabel T
        I.S. Tabel T tidak kosong, N > 0
        F.S. Menghasilkan harga minimum dari tabel T[1..N] secara sekuensial mulai dari 
            indeks 1..N dan menyimpan hasilnya di MIN serta mendapatkan indeks terkecil 
            elemen yang bernilai MIN yang disimpan di IMin }

ALGORITMA
    procedure FindMin (input T : TabInt, input N : integer, 
                    output MIN : integer, output IMin : integer )
    { Pencarian harga minimum tabel T
        I.S. Tabel T tidak kosong, N > 0
        F.S. Menghasilkan harga minimum dari tabel T[1..N] secara sekuensial mulai dari 
            indeks 1..N dan menyimpan hasilnya di MIN serta mendapatkan indeks terkecil 
            elemen yang bernilai MIN yang disimpan di IMin }
            
    KAMUS LOKAL
        i : integer
    
    ALGORITMA
        MIN <- T[1]
        i <- 2
        IMin <- 1
        
        while i <= N do
            if T[i] < MIN then
                MIN <- T[i]
            i <- i + 1
        
        while IMin <= N and T[IMin] /= MIN do
            IMin <- IMin + 1

        output(MIN)
        output(IMin)
